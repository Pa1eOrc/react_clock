{"version":3,"sources":["App.tsx","index.tsx"],"names":["getRandomName","value","Date","now","toString","slice","App","state","today","clockName","hasClock","timerIdClock","timerIdName","this","window","setInterval","setState","console","info","toUTCString","document","addEventListener","event","preventDefault","_prevProps","prevState","debug","clearInterval","className","React","PureComponent","ReactDOM","render","getElementById"],"mappings":"sNASA,SAASA,IACP,IAAMC,EAAQC,KAAKC,MAAMC,WAAWC,OAAO,GAE3C,MAAM,SAAN,OAAgBJ,GAGX,IAAMK,EAAb,4MACEC,MAAe,CACbC,MAAO,IAAIN,KACXO,UAAW,UACXC,UAAU,GAJd,EAOEC,aAAe,EAPjB,EASEC,YAAc,EAThB,uDAWE,WAAqB,IAAD,OAClBC,KAAKF,aAAeG,OAAOC,aAAY,WACrC,EAAKC,SAAS,CACZR,MAAO,IAAIN,OAGT,EAAKK,MAAMG,UAEbO,QAAQC,KAAK,EAAKX,MAAMC,MAAMW,cAAcd,OAAO,IAAK,MAEzD,KAEHQ,KAAKD,YAAcE,OAAOC,aAAY,WACpC,EAAKC,SAAS,CACZP,UAAWT,QAEZ,MAEHoB,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAMC,iBACN,EAAKP,SAAS,CACZN,UAAU,OAIdU,SAASC,iBAAiB,SAAS,WACjC,EAAKL,SAAS,CACZN,UAAU,EACVF,MAAO,IAAIN,YAvCnB,gCA4CE,SAAmBsB,EAAgBC,GAC7BZ,KAAKN,MAAMG,UAAYG,KAAKN,MAAME,YAAcgB,EAAUhB,WAE5DQ,QAAQS,MAAR,uBAA8BD,EAAUhB,UAAxC,eAAwDI,KAAKN,MAAME,cA/CzE,kCAmDE,WACEK,OAAOa,cAAcd,KAAKF,cAC1BG,OAAOa,cAAcd,KAAKD,eArD9B,oBAwDE,WACE,MAAuCC,KAAKN,MAApCC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,UAAWC,EAA1B,EAA0BA,SAE1B,OACE,sBAAKkB,UAAU,MAAf,UACE,6CAEClB,GACC,sBAAKkB,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SAAiCnB,IAEhC,YAED,sBAAMmB,UAAU,cAAhB,SACGpB,EAAMW,cAAcd,OAAO,IAAK,eAtE/C,GAAyBwB,IAAMC,eCZ/BC,IAASC,OACP,cAAC,EAAD,IACAZ,SAASa,eAAe,W","file":"static/js/main.0a33decc.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\ntype State = {\n  today: Date;\n  clockName: string;\n  hasClock: boolean;\n};\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\nexport class App extends React.PureComponent<{}, State> {\n  state: State = {\n    today: new Date(),\n    clockName: 'Clock-0',\n    hasClock: true,\n  };\n\n  timerIdClock = 0;\n\n  timerIdName = 0;\n\n  componentDidMount() {\n    this.timerIdClock = window.setInterval(() => {\n      this.setState({\n        today: new Date(),\n      });\n\n      if (this.state.hasClock) {\n        // eslint-disable-next-line no-console\n        console.info(this.state.today.toUTCString().slice(-12, -4));\n      }\n    }, 1000);\n\n    this.timerIdName = window.setInterval(() => {\n      this.setState({\n        clockName: getRandomName(),\n      });\n    }, 3300);\n\n    document.addEventListener('contextmenu', (event) => {\n      event.preventDefault();\n      this.setState({\n        hasClock: false,\n      });\n    });\n\n    document.addEventListener('click', () => {\n      this.setState({\n        hasClock: true,\n        today: new Date(),\n      });\n    });\n  }\n\n  componentDidUpdate(_prevProps: {}, prevState: State) {\n    if (this.state.hasClock && this.state.clockName !== prevState.clockName) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevState.clockName} to ${this.state.clockName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerIdClock);\n    window.clearInterval(this.timerIdName);\n  }\n\n  render() {\n    const { today, clockName, hasClock } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {hasClock && (\n          <div className=\"Clock\">\n            <strong className=\"Clock__name\">{clockName}</strong>\n\n            {' time is '}\n\n            <span className=\"Clock__time\">\n              {today.toUTCString().slice(-12, -4)}\n            </span>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}